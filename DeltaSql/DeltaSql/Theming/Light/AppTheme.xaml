<!-- 
    Light
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    mc:Ignorable="options">
    <!-- 
        Colors
    -->
    <Color x:Key="DeltaSql.Border.Color">#FF000000</Color>
    <Color x:Key="DeltaSql.ConnectButton.Background.Color">#FF1C851B</Color>
    <Color x:Key="DeltaSql.ConnectButton.Disabled.Background.Color">#FF004400</Color>
    <Color x:Key="DeltaSql.ConnectButton.MouseOver.Background.Color">#FF229E21</Color>
    <Color x:Key="DeltaSql.ConnectButton.Pressed.Background.Color">#FF187517</Color>
    <Color x:Key="DeltaSql.Foreground.Color">#FF000000</Color>
    <Color x:Key="DeltaSql.Foreground.Disabled.Color">#FF7D7D7D</Color>
    <Color x:Key="DeltaSql.Foreground.Error.Color">#FFFF0000</Color>
    <Color x:Key="DeltaSql.Grid.Color">#FFFFFFFF</Color>
    <Color x:Key="DeltaSql.GridSplitter.Color">#FF888888</Color>
    <Color x:Key="DeltaSql.InternalDialog.Color">#FFDDDDDD</Color>
    <Color x:Key="DeltaSql.InternalDialog.Title.Color">#FFBBBBBB</Color>
    <Color x:Key="DeltaSql.InternalDialog.ButtonArea.Color">#FFBBBBBB</Color>
    <Color x:Key="DeltaSql.MessageBox.Color">#FFDDDDDD</Color>
    <Color x:Key="DeltaSql.MessageBox.Foreground.Color">#FF000000</Color>
    <Color x:Key="DeltaSql.MessageBox.Title.Color">#FFBBBBBB</Color>
    <Color x:Key="DeltaSql.MessageBox.ButtonArea.Color">#FFBBBBBB</Color>
    <Color x:Key="DeltaSql.ProgressBox.Background.Color">#FFDDDDDD</Color>
    <Color x:Key="DeltaSql.ProgressBox.Foreground.Color">#FF000000</Color>
    <Color x:Key="DeltaSql.ProgressBox.Title.Background.Color">#FFBBBBBB</Color>
    <Color x:Key="DeltaSql.SqlInput.ConnectionStatus.NotConnected.Color">#FF000000</Color>
    <Color x:Key="DeltaSql.SqlInput.ConnectionStatus.DatabaseConnected.Color">#FF3456FF</Color>
    <Color x:Key="DeltaSql.SqlInput.ConnectionStatus.DatabaseConnectionRequired.Color">#FF5678FF</Color>
    <Color x:Key="DeltaSql.SqlInput.ConnectionStatus.ServerConnected.Color">#FFAA3467</Color>
    <Color x:Key="DeltaSql.SqlInput.ConnectionStatus.ServerConnectionRequired.Color">#FFCC5467</Color>
    <Color x:Key="DeltaSql.Status.Accepted.Background.Color">#FF1C851B</Color>
    <Color x:Key="DeltaSql.Status.Accepted.Border.Color">#FF169C40</Color>
    <Color x:Key="DeltaSql.Status.Accepted.Foreground.Color">#FF0B4D20</Color>
    <Color x:Key="DeltaSql.Status.Error.Background.Color">#FFDD0000</Color>
    <Color x:Key="DeltaSql.Status.Error.Border.Color">#FFFF3333</Color>
    <Color x:Key="DeltaSql.Status.Error.Foreground.Color">#FF7B0000</Color>
    <Color x:Key="DeltaSql.Status.Warning.Background.Color">#FFFFA500</Color>
    <Color x:Key="DeltaSql.Status.Warning.Border.Color">#FFFFA566</Color>
    <Color x:Key="DeltaSql.Status.Warning.Foreground.Color">#FFBB5000</Color>
    <Color x:Key="DeltaSql.Watermark.Foreground.Color">#FF808080</Color>

    <!-- 
        Brushes
    -->
    <SolidColorBrush x:Key="DeltaSql.Border" Color="{DynamicResource DeltaSql.Border.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.ConnectButton.Background" Color="{DynamicResource DeltaSql.ConnectButton.Background.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.ConnectButton.Disabled.Background" Color="{DynamicResource DeltaSql.ConnectButton.Disabled.Background.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.ConnectButton.MouseOver.Background" Color="{DynamicResource DeltaSql.ConnectButton.MouseOver.Background.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.ConnectButton.Pressed.Background" Color="{DynamicResource DeltaSql.ConnectButton.Pressed.Background.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.Foreground" Color="{DynamicResource DeltaSql.Foreground.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.Foreground.Disabled" Color="{DynamicResource DeltaSql.Foreground.Disabled.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.Foreground.Error" Color="{DynamicResource DeltaSql.Foreground.Error.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.Grid" Color="{DynamicResource DeltaSql.Grid.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.GridSplitter" Color="{DynamicResource DeltaSql.GridSplitter.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.InternalDialog" Color="{DynamicResource DeltaSql.InternalDialog.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.InternalDialog.Title" Color="{DynamicResource DeltaSql.InternalDialog.Title.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.InternalDialog.ButtonArea" Color="{DynamicResource DeltaSql.InternalDialog.ButtonArea.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.MessageBox" Color="{DynamicResource DeltaSql.MessageBox.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.MessageBox.Foreground" Color="{DynamicResource DeltaSql.MessageBox.Foreground.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.MessageBox.Title" Color="{DynamicResource DeltaSql.MessageBox.Title.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.MessageBox.ButtonArea" Color="{DynamicResource DeltaSql.MessageBox.ButtonArea.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.ProgressBox.Background" Color="{DynamicResource DeltaSql.ProgressBox.Background.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.ProgressBox.Foreground" Color="{DynamicResource DeltaSql.ProgressBox.Foreground.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.ProgressBox.Title.Background" Color="{DynamicResource DeltaSql.ProgressBox.Title.Background.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.SqlInput.ConnectionStatus.NotConnected" Color="{DynamicResource DeltaSql.SqlInput.ConnectionStatus.NotConnected.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.SqlInput.ConnectionStatus.DatabaseConnected" Color="{DynamicResource DeltaSql.SqlInput.ConnectionStatus.DatabaseConnected.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.SqlInput.ConnectionStatus.DatabaseConnectionRequired" Color="{DynamicResource DeltaSql.SqlInput.ConnectionStatus.DatabaseConnectionRequired.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.SqlInput.ConnectionStatus.ServerConnected" Color="{DynamicResource DeltaSql.SqlInput.ConnectionStatus.ServerConnected.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.SqlInput.ConnectionStatus.ServerConnectionRequired" Color="{DynamicResource DeltaSql.SqlInput.ConnectionStatus.ServerConnectionRequired.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.Status.Accepted.Background" Color="{DynamicResource DeltaSql.Status.Accepted.Background.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.Status.Accepted.Border" Color="{DynamicResource DeltaSql.Status.Accepted.Border.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.Status.Accepted.Foreground" Color="{DynamicResource DeltaSql.Status.Accepted.Foreground.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.Status.Error.Background" Color="{DynamicResource DeltaSql.Status.Error.Background.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.Status.Error.Border" Color="{DynamicResource DeltaSql.Status.Error.Border.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.Status.Error.Foreground" Color="{DynamicResource DeltaSql.Status.Error.Foreground.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.Status.Warning.Background" Color="{DynamicResource DeltaSql.Status.Warning.Background.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.Status.Warning.Border" Color="{DynamicResource DeltaSql.Status.Warning.Border.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.Status.Warning.Foreground" Color="{DynamicResource DeltaSql.Status.Warning.Foreground.Color}" options:Freeze="True"/>
    <SolidColorBrush x:Key="DeltaSql.Watermark.Foreground" Color="{DynamicResource DeltaSql.Watermark.Foreground.Color}" options:Freeze="True"/>

    <!-- 
        Styles
    -->
    <!-- Buttons -->
    <Style x:Key="CollapsedButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>
    <Style x:Key="InternalDialogCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="BorderBrush" Value="#00000000" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Content" Value="{StaticResource CloseX}" />
    </Style>
    <Style x:Key="MessageBoxDialogButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="MinWidth" Value="50" />
    </Style>
    
    <!-- Grids -->
    <Style x:Key="GridStyle" TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource DeltaSql.Grid}" />
    </Style>
    <Style x:Key="CredentialsGrudStyle" TargetType="Grid">
        <Setter Property="IsEnabled" Value="True" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding SelectedAuthMode}" Value="0">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PreviousConnectionGridStyle" TargetType="Grid">
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding PreviousConnections.Count}" Value="0">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Borders -->
    <Style x:Key="BorderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource DeltaSql.Border}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    <Style x:Key="ConnectedBorderStatusStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Background" Value="{DynamicResource DeltaSql.SqlInput.ConnectionStatus.NotConnected}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ConnectionStatus}" Value="DatabaseConnected">
                <Setter Property="Background" Value="{DynamicResource DeltaSql.SqlInput.ConnectionStatus.DatabaseConnected}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ConnectionStatus}" Value="DatabaseConnectionRequired">
                <Setter Property="Background" Value="{DynamicResource DeltaSql.SqlInput.ConnectionStatus.DatabaseConnectionRequired}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ConnectionStatus}" Value="ServerConnected">
                <Setter Property="Background" Value="{DynamicResource DeltaSql.SqlInput.ConnectionStatus.ServerConnected}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ConnectionStatus}" Value="ServerConnectionRequired">
                <Setter Property="Background" Value="{DynamicResource DeltaSql.SqlInput.ConnectionStatus.ServerConnectionRequired}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PreviousConnectionBorderStyle" TargetType="Border">
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding PreviousConnections.Count}" Value="0">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- TextBlocks -->
    <Style x:Key="TextBlockForegroundStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource DeltaSql.Foreground}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource DeltaSql.Foreground.Disabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ConnectedTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource DeltaSql.SqlInput.ConnectionStatus.NotConnected}" />
        <Setter Property="Text" Value="{Binding Translations.NotConnected, FallbackValue=Not Connected}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ConnectionStatus}" Value="DatabaseConnected">
                <Setter Property="Foreground" Value="{DynamicResource DeltaSql.SqlInput.ConnectionStatus.DatabaseConnected}" />
                <Setter Property="Text" Value="{Binding Translations.DatabaseConnected, FallbackValue=Database Connected}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ConnectionStatus}" Value="DatabaseConnectionRequired">
                <Setter Property="Foreground" Value="{DynamicResource DeltaSql.SqlInput.ConnectionStatus.DatabaseConnectionRequired}" />
                <Setter Property="Text" Value="{Binding Translations.DatabaseConnectionRequired, FallbackValue=Database Connection Required}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ConnectionStatus}" Value="ServerConnected">
                <Setter Property="Foreground" Value="{DynamicResource DeltaSql.SqlInput.ConnectionStatus.ServerConnected}" />
                <Setter Property="Text" Value="{Binding Translations.ServerConnected, FallbackValue=Server Connected}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ConnectionStatus}" Value="ServerConnectionRequired">
                <Setter Property="Foreground" Value="{DynamicResource DeltaSql.SqlInput.ConnectionStatus.ServerConnectionRequired}" />
                <Setter Property="Text" Value="{Binding Translations.ServerConnectionRequired, FallbackValue=Server Connection Required}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="InfoEntryWarningErrorStyle" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding InfoEntryAcceptanceState}" Value="Accepted">
                <Setter Property="Background" Value="{DynamicResource DeltaSql.Status.Accepted.Background}" />
                <Setter Property="Foreground" Value="{DynamicResource DeltaSql.Status.Accepted.Foreground}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding InfoEntryAcceptanceState}" Value="Error">
                <Setter Property="Background" Value="{DynamicResource DeltaSql.Status.Error.Background}" />
                <Setter Property="Foreground" Value="{DynamicResource DeltaSql.Status.Error.Foreground}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding InfoEntryAcceptanceState}" Value="Warning">
                <Setter Property="Background" Value="{DynamicResource DeltaSql.Status.Warning.Background}" />
                <Setter Property="Foreground" Value="{DynamicResource DeltaSql.Status.Warning.Foreground}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ManualEntryWarningErrorStyle" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ManualEntryAcceptanceState}" Value="Accepted">
                <Setter Property="Background" Value="{DynamicResource DeltaSql.Status.Accepted.Background}" />
                <Setter Property="Foreground" Value="{DynamicResource DeltaSql.Status.Accepted.Foreground}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ManualEntryAcceptanceState}" Value="Error">
                <Setter Property="Background" Value="{DynamicResource DeltaSql.Status.Error.Background}" />
                <Setter Property="Foreground" Value="{DynamicResource DeltaSql.Status.Error.Foreground}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ManualEntryAcceptanceState}" Value="Warning">
                <Setter Property="Background" Value="{DynamicResource DeltaSql.Status.Warning.Background}" />
                <Setter Property="Foreground" Value="{DynamicResource DeltaSql.Status.Warning.Foreground}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- ProgressBars -->
    <Style x:Key="ProgressDialogProgressBarStyle" TargetType="ProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
        <Setter Property="IsIndeterminate" Value="{Binding ProgressViewModel.ProgressIsIndeterminate}" />
        <Setter Property="Maximum" Value="{Binding ProgressViewModel.ProgressMax}" />
        <Setter Property="Minimum" Value="{Binding ProgressViewModel.ProgressMin}" />
        <Setter Property="Height" Value="20" />
    </Style>

    <!-- Runs -->
    <Style x:Key="LoggingInfoRunStyle" TargetType="Run">
        <Setter Property="Foreground" Value="{DynamicResource DeltaSql.Foreground}" />
    </Style>
    
    <!-- 
        Template Overrides
    -->
    <!-- Buttons -->
    <Style x:Key="ConnectButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource DeltaSql.ConnectButton.Background}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource DeltaSql.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource DeltaSql.ConnectButton.MouseOver.Background}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource DeltaSql.ConnectButton.Pressed.Background}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource DeltaSql.ConnectButton.Disabled.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DeltaSql.Foreground.Disabled}"/>
                            <Setter Property="Opacity" Value="0.75" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>