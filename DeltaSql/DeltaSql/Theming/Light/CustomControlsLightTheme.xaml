<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:customControls="clr-namespace:WPF.AA.CustomControls;assembly=WPF.AA.CustomControls">
    <Style x:Key="WatermarkTextBoxStyle" TargetType="{x:Type customControls:WatermarkTextBox}" 
           BasedOn="{StaticResource {x:Type customControls:WatermarkTextBox}}">
        <Setter Property="Background" Value="{DynamicResource TextBoxBase.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBox.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBoxBase.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="MinHeight" Value="18"/>
        <Setter Property="Padding" Value="0" />
        <Setter Property="WatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Content="{Binding}" Foreground="{DynamicResource DeltaSql.Watermark.Foreground}" Focusable="False" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:WatermarkTextBox}">
                    <Grid>
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" Margin="-1,0"
                                              HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                <ContentPresenter x:Name="watermark"
                                              Content="{TemplateBinding Watermark}"
                                              ContentTemplate="{TemplateBinding WatermarkTemplate}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              IsHitTestVisible="False"
                                              Margin="{TemplateBinding Padding}"
                                              Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" Value="Visible" TargetName="watermark" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBox.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBox.Focus.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource TextBoxBase.InactiveSelection}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RoundableToggleButtonStyle" TargetType="{x:Type customControls:RoundableToggleButton}" 
           BasedOn="{StaticResource {x:Type customControls:RoundableToggleButton}}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource Button.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Button.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource Button.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:RoundableToggleButton}">
                    <Grid>
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Background}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource RoundableToggleButtonStyle.IsChecked.Border}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NumericUpDownStyle" TargetType="{x:Type customControls:NumericUpDown}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource TextBox.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBox.Border}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxBase.Foreground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:NumericUpDown}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBox x:Name="PART_NumericDisplay" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" 
                                     IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <RepeatButton x:Name="PART_UpIncrement" Grid.Column="1" Grid.Row="0">
                                <Path x:Name="upPath" Fill="#CCCCCC" Data="M 0 4 L 8 4 L 4 0 Z" />
                            </RepeatButton>
                            <RepeatButton x:Name="PART_DownIncrement" Grid.Column="1" Grid.Row="1" >
                                <Path x:Name="downPath" Fill="#CCCCCC" Data="M 0 0 L 4 4 L 8 0 Z" />
                            </RepeatButton>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.IsDefault.Border}" />
                            <!--<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.MouseOver.Border}"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="PART_NumericDisplay" Value="{DynamicResource Button.Disabled.Foreground}"/>
                            <Setter Property="Fill" TargetName="upPath" Value="{DynamicResource ComboBox.Disabled.Border}"/>
                            <Setter Property="Fill" TargetName="downPath" Value="{DynamicResource ComboBox.Disabled.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ShowHidePassowrdBoxStyle" TargetType="{x:Type customControls:ShowHidePasswordBox}">
        <Setter Property="Background" Value="{DynamicResource TextBoxBase.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBox.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBoxBase.Foreground}"/>
        <Setter Property="BorderThickness" Value="1,1,0,1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Content="{Binding}" Foreground="{DynamicResource DeltaSql.Watermark.Foreground}" Focusable="False" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:ShowHidePasswordBox}">
                    <Grid x:Name="grid" SnapsToDevicePixels="True">
                        <TextBox x:Name="PART_TextBox" Padding="{TemplateBinding Padding}" Margin="0,0,23,0"
                                 Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" 
                                 Background="{TemplateBinding Background}" 
                                 BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <PasswordBox x:Name="PART_PasswordBox" Padding="{TemplateBinding Padding}" Margin="0,0,23,0"
                                     Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                     BorderThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter x:Name="watermark" IsHitTestVisible="False"
                                          Content="{TemplateBinding Watermark}"
                                          ContentTemplate="{TemplateBinding WatermarkTemplate}"                                          
                                          Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Padding, Converter={StaticResource ThicknessConverter},
                                                           ConverterParameter=L:+2|T:+1}"
                                          Visibility="Collapsed" />
                        <Button x:Name="PART_ShowTextButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0,1,1,1" HorizontalAlignment="Right" VerticalAlignment="Stretch">
                            <Rectangle Width="20" Height="13" Margin="0,0,0,3">
                                <Rectangle.Fill>
                                    <DrawingBrush>
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M128,95L0,95 0,0 128,0z" />
                                                    <GeometryDrawing Brush="{DynamicResource DeltaSql.Foreground}" Geometry="M565 764 c-11 -2 -45 -9 -75 -15 -128 -25 -308 -144 -370 -245 l-22 -35 42 -55 c72 -96 211 -184 345 -219 76 -19 221 -19 305 1 101 23 202 78 283 154 40 37 80 81 89 97 17 29 17 29 -27 84 -109 137 -281 224 -462 234 -48 2 -97 2 -108 -1z m158 -77 c90 -38 141 -117 141 -218 0 -53 -5 -74 -28 -113 -93 -159 -325 -148 -406 20 -32 65 -25 154 16 220 54 88 183 130 277 91z" />
                                                    <GeometryDrawing Brush="{DynamicResource DeltaSql.Foreground}" Geometry="M575 645 c-142 -50 -164 -245 -36 -326 117 -75 268 -1 279 137 l5 55 -34 -6 c-48 -9 -89 23 -89 70 0 19 5 37 10 40 18 11 11 23 -21 34 -41 14 -65 13 -114 -4z" />
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Button>
                        <Button x:Name="PART_HideTextButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0,1,1,1" HorizontalAlignment="Right" VerticalAlignment="Stretch">
                            <Rectangle Width="20" Height="15" Margin="0,0,0,1">
                                <Rectangle.Fill>
                                    <DrawingBrush>
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M128,95L0,95 0,0 128,0z" />
                                                    <GeometryDrawing Brush="{DynamicResource DeltaSql.Foreground}" Geometry="M615 490 c-388 -388 -389 -389 -370 -410 l19 -21 393 393 c369 369 391 393 376 410 -9 10 -19 18 -22 18 -3 0 -181 -175 -396 -390z" />
                                                    <GeometryDrawing Brush="{DynamicResource DeltaSql.Foreground}" Geometry="M545 764 c-137 -21 -255 -83 -362 -191 -46 -45 -83 -87 -83 -94 0 -36 115 -152 213 -214 l28 -18 50 49 50 50 -16 37 c-61 146 50 317 207 317 32 0 75 -7 95 -15 37 -16 37 -16 71 19 l35 34 -39 12 c-43 12 -202 21 -249 14z" />
                                                    <GeometryDrawing Brush="{DynamicResource DeltaSql.Foreground}" Geometry="M883 647 c-49 -50 -51 -53 -38 -77 55 -99 3 -247 -108 -307 -43 -23 -151 -23 -193 -1 -31 17 -31 17 -64 -17 -19 -19 -32 -36 -29 -38 15 -13 111 -27 186 -27 141 0 257 37 376 119 44 30 139 128 157 160 17 32 -95 152 -210 225 -26 15 -27 15 -77 -37z" />
                                                    <GeometryDrawing Brush="{DynamicResource DeltaSql.Foreground}" Geometry="M578 649 c-26 -10 -26 -11 -10 -38 13 -24 14 -33 3 -59 -16 -38 -60 -59 -90 -43 -18 10 -21 8 -27 -15 -7 -27 11 -104 24 -104 4 0 63 56 131 124 l124 124 -39 11 c-47 13 -80 13 -116 0z" />
                                                    <GeometryDrawing Brush="{DynamicResource DeltaSql.Foreground}" Geometry="M671 436 l-125 -125 30 -11 c16 -7 53 -10 82 -8 60 5 113 41 143 98 22 40 25 127 7 153 -12 15 -27 4 -137 -107z" />
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Button>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="grid" Value="0.7"/>
                            <Setter Property="Opacity" TargetName="PART_ShowTextButton" Value="0.66"/>
                            <Setter Property="Opacity" TargetName="PART_HideTextButton" Value="0.66"/>
                            <Setter Property="TextElement.Foreground" TargetName="grid" Value="{DynamicResource DeltaSql.Foreground.Disabled}"/>
                        </Trigger>
                        <Trigger Property="ShowPassword" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_PasswordBox" />
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_TextBox" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ShowTextButton" />
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_HideTextButton" />
                        </Trigger>
                        <Trigger Property="ShowPassword" Value="False">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_PasswordBox" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_TextBox" />
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ShowTextButton" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_HideTextButton" />
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" Value="Visible" TargetName="watermark" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Apply styles to controls -->
    <Style BasedOn="{StaticResource NumericUpDownStyle}" TargetType="customControls:NumericUpDown" />
    <Style BasedOn="{StaticResource RoundableToggleButtonStyle}" TargetType="customControls:RoundableToggleButton" />
    <Style BasedOn="{StaticResource WatermarkTextBoxStyle}" TargetType="customControls:WatermarkTextBox" />
    <Style BasedOn="{StaticResource ShowHidePassowrdBoxStyle}" TargetType="customControls:ShowHidePasswordBox" />
</ResourceDictionary>